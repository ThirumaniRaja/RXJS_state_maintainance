{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { saveFormData, resetForm } from './form.action';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@ngrx/store\";\nexport let FormComponent = /*#__PURE__*/(() => {\n  class FormComponent {\n    constructor(fb, store) {\n      this.fb = fb;\n      this.store = store;\n      this.formState$ = store.select('form');\n    }\n    ngOnInit() {\n      this.form = this.fb.group({\n        firstName: ['', Validators.required],\n        middleName: [''],\n        lastName: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        phone: ['', Validators.required],\n        address: this.fb.group({\n          street: ['', Validators.required],\n          city: ['', Validators.required],\n          state: ['', Validators.required]\n        })\n      });\n      // Load saved data from the store\n      this.formState$.subscribe(data => {\n        if (data) this.form.patchValue(data);\n      });\n    }\n    saveAsDraft() {\n      this.store.dispatch(saveFormData({\n        formData: this.form.value\n      }));\n      alert('Draft saved!');\n    }\n    resetForm() {\n      this.store.dispatch(resetForm());\n      this.form.reset();\n    }\n    static {\n      this.ɵfac = function FormComponent_Factory(t) {\n        return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Store));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: FormComponent,\n        selectors: [[\"app-form\"]],\n        decls: 39,\n        vars: 1,\n        consts: [[3, \"formGroup\"], [\"formControlName\", \"firstName\"], [\"formControlName\", \"middleName\"], [\"formControlName\", \"lastName\"], [\"type\", \"email\", \"formControlName\", \"email\"], [\"type\", \"tel\", \"formControlName\", \"phone\"], [\"formControlName\", \"address.street\"], [\"formControlName\", \"address.city\"], [\"formControlName\", \"address.state\"], [\"type\", \"button\", 3, \"click\"]],\n        template: function FormComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"form\", 0)(1, \"label\");\n            i0.ɵɵtext(2, \"First Name: \");\n            i0.ɵɵelement(3, \"input\", 1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(4, \"br\");\n            i0.ɵɵelementStart(5, \"label\");\n            i0.ɵɵtext(6, \"Middle Name: \");\n            i0.ɵɵelement(7, \"input\", 2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(8, \"br\");\n            i0.ɵɵelementStart(9, \"label\");\n            i0.ɵɵtext(10, \"Last Name: \");\n            i0.ɵɵelement(11, \"input\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(12, \"br\");\n            i0.ɵɵelementStart(13, \"label\");\n            i0.ɵɵtext(14, \"Email: \");\n            i0.ɵɵelement(15, \"input\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(16, \"br\");\n            i0.ɵɵelementStart(17, \"label\");\n            i0.ɵɵtext(18, \"Phone: \");\n            i0.ɵɵelement(19, \"input\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(20, \"br\");\n            i0.ɵɵelementStart(21, \"h3\");\n            i0.ɵɵtext(22, \"Address\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(23, \"label\");\n            i0.ɵɵtext(24, \"Street: \");\n            i0.ɵɵelement(25, \"input\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(26, \"br\");\n            i0.ɵɵelementStart(27, \"label\");\n            i0.ɵɵtext(28, \"City: \");\n            i0.ɵɵelement(29, \"input\", 7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(30, \"br\");\n            i0.ɵɵelementStart(31, \"label\");\n            i0.ɵɵtext(32, \"State: \");\n            i0.ɵɵelement(33, \"input\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(34, \"br\");\n            i0.ɵɵelementStart(35, \"button\", 9);\n            i0.ɵɵlistener(\"click\", function FormComponent_Template_button_click_35_listener() {\n              return ctx.saveAsDraft();\n            });\n            i0.ɵɵtext(36, \"Save as Draft\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(37, \"button\", 9);\n            i0.ɵɵlistener(\"click\", function FormComponent_Template_button_click_37_listener() {\n              return ctx.resetForm();\n            });\n            i0.ɵɵtext(38, \"Reset\");\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"formGroup\", ctx.form);\n          }\n        },\n        dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n      });\n    }\n  }\n  return FormComponent;\n})();","map":{"version":3,"names":["Validators","saveFormData","resetForm","FormComponent","constructor","fb","store","formState$","select","ngOnInit","form","group","firstName","required","middleName","lastName","email","phone","address","street","city","state","subscribe","data","patchValue","saveAsDraft","dispatch","formData","value","alert","reset","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","Store","selectors","decls","vars","consts","template","FormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelement","ɵɵelementEnd","ɵɵlistener","FormComponent_Template_button_click_35_listener","FormComponent_Template_button_click_37_listener","ɵɵproperty"],"sources":["C:\\Thiru\\Angular\\RXJS_state_maintainance\\app\\src\\app\\components\\form\\form.component.ts","C:\\Thiru\\Angular\\RXJS_state_maintainance\\app\\src\\app\\components\\form\\form.component.html"],"sourcesContent":["\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { saveFormData, resetForm } from './form.action';\nimport { FormState } from '../../models/form';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n  form!: FormGroup;\n  formState$: Observable<FormState>;\n\n  constructor(private fb: FormBuilder, private store: Store<{ form: FormState }>) {\n    this.formState$ = store.select('form');\n  }\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      firstName: ['', Validators.required],\n      middleName: [''],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      phone: ['', Validators.required],\n      address: this.fb.group({\n        street: ['', Validators.required],\n        city: ['', Validators.required],\n        state: ['', Validators.required]\n      })\n    });\n\n    // Load saved data from the store\n    this.formState$.subscribe((data) => {\n      if (data) this.form.patchValue(data);\n    });\n  }\n\n  saveAsDraft() {\n    this.store.dispatch(saveFormData({ formData: this.form.value }));\n    alert('Draft saved!');\n  }\n\n  resetForm() {\n    this.store.dispatch(resetForm());\n    this.form.reset();\n  }\n}\n\n","<form [formGroup]=\"form\">\n    <label>First Name: <input formControlName=\"firstName\"></label><br>\n    <label>Middle Name: <input formControlName=\"middleName\"></label><br>\n    <label>Last Name: <input formControlName=\"lastName\"></label><br>\n    <label>Email: <input type=\"email\" formControlName=\"email\"></label><br>\n    <label>Phone: <input type=\"tel\" formControlName=\"phone\"></label><br>\n  \n    <h3>Address</h3>\n    <label>Street: <input formControlName=\"address.street\"></label><br>\n    <label>City: <input formControlName=\"address.city\"></label><br>\n    <label>State: <input formControlName=\"address.state\"></label><br>\n  \n    <button type=\"button\" (click)=\"saveAsDraft()\">Save as Draft</button>\n    <button type=\"button\" (click)=\"resetForm()\">Reset</button>\n  </form>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}