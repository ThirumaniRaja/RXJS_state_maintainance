{"ast":null,"code":"import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function pairs(obj, scheduler) {\n  if (!scheduler) {\n    return new Observable(subscriber => {\n      const keys = Object.keys(obj);\n      for (let i = 0; i < keys.length && !subscriber.closed; i++) {\n        const key = keys[i];\n        if (obj.hasOwnProperty(key)) {\n          subscriber.next([key, obj[key]]);\n        }\n      }\n      subscriber.complete();\n    });\n  } else {\n    return new Observable(subscriber => {\n      const keys = Object.keys(obj);\n      const subscription = new Subscription();\n      subscription.add(scheduler.schedule(dispatch, 0, {\n        keys,\n        index: 0,\n        subscriber,\n        subscription,\n        obj\n      }));\n      return subscription;\n    });\n  }\n}\nexport function dispatch(state) {\n  const {\n    keys,\n    index,\n    subscriber,\n    subscription,\n    obj\n  } = state;\n  if (!subscriber.closed) {\n    if (index < keys.length) {\n      const key = keys[index];\n      subscriber.next([key, obj[key]]);\n      subscription.add(this.schedule({\n        keys,\n        index: index + 1,\n        subscriber,\n        subscription,\n        obj\n      }));\n    } else {\n      subscriber.complete();\n    }\n  }\n}","map":{"version":3,"names":["Observable","Subscription","pairs","obj","scheduler","subscriber","keys","Object","i","length","closed","key","hasOwnProperty","next","complete","subscription","add","schedule","dispatch","index","state"],"sources":["C:\\Thiru\\Angular\\RXJS_state_maintainance\\app\\node_modules\\rxjs\\src\\internal\\observable\\pairs.ts"],"sourcesContent":["import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\n/**\n * Convert an object into an Observable of `[key, value]` pairs.\n *\n * <span class=\"informal\">Turn entries of an object into a stream.</span>\n *\n * <img src=\"./img/pairs.png\" width=\"100%\">\n *\n * `pairs` takes an arbitrary object and returns an Observable that emits arrays. Each\n * emitted array has exactly two elements - the first is a key from the object\n * and the second is a value corresponding to that key. Keys are extracted from\n * an object via `Object.keys` function, which means that they will be only\n * enumerable keys that are present on an object directly - not ones inherited\n * via prototype chain.\n *\n * By default these arrays are emitted synchronously. To change that you can\n * pass a {@link SchedulerLike} as a second argument to `pairs`.\n *\n * @example <caption>Converts a javascript object to an Observable</caption>\n * ```ts\n * import { pairs } from 'rxjs';\n *\n * const obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * pairs(obj)\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('the end!')\n * );\n *\n * // Logs:\n * // [\"foo\", 42],\n * // [\"bar\", 56],\n * // [\"baz\", 78],\n * // \"the end!\"\n * ```\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to schedule\n * when resulting Observable will emit values.\n * @returns {(Observable<Array<string|T>>)} An observable sequence of\n * [key, value] pairs from the object.\n */\nexport function pairs<T>(obj: Object, scheduler?: SchedulerLike): Observable<[string, T]> {\n  if (!scheduler) {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      for (let i = 0; i < keys.length && !subscriber.closed; i++) {\n        const key = keys[i];\n        if (obj.hasOwnProperty(key)) {\n          subscriber.next([key, obj[key]]);\n        }\n      }\n      subscriber.complete();\n    });\n  } else {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      const subscription = new Subscription();\n      subscription.add(\n        scheduler.schedule<{ keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }>\n          (dispatch, 0, { keys, index: 0, subscriber, subscription, obj }));\n      return subscription;\n    });\n  }\n}\n\n/** @internal */\nexport function dispatch<T>(this: SchedulerAction<any>,\n                            state: { keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }) {\n  const { keys, index, subscriber, subscription, obj } = state;\n  if (!subscriber.closed) {\n    if (index < keys.length) {\n      const key = keys[index];\n      subscriber.next([key, obj[key]]);\n      subscription.add(this.schedule({ keys, index: index + 1, subscriber, subscription, obj }));\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,eAAe;AAG1C,SAASC,YAAY,QAAQ,iBAAiB;AAkD9C,OAAM,SAAUC,KAAKA,CAAIC,GAAW,EAAEC,SAAyB;EAC7D,IAAI,CAACA,SAAS,EAAE;IACd,OAAO,IAAIJ,UAAU,CAAcK,UAAU,IAAG;MAC9C,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACH,GAAG,CAAC;MAC7B,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACG,MAAM,IAAI,CAACJ,UAAU,CAACK,MAAM,EAAEF,CAAC,EAAE,EAAE;QAC1D,MAAMG,GAAG,GAAGL,IAAI,CAACE,CAAC,CAAC;QACnB,IAAIL,GAAG,CAACS,cAAc,CAACD,GAAG,CAAC,EAAE;UAC3BN,UAAU,CAACQ,IAAI,CAAC,CAACF,GAAG,EAAER,GAAG,CAACQ,GAAG,CAAC,CAAC,CAAC;;;MAGpCN,UAAU,CAACS,QAAQ,EAAE;IACvB,CAAC,CAAC;GACH,MAAM;IACL,OAAO,IAAId,UAAU,CAAcK,UAAU,IAAG;MAC9C,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACH,GAAG,CAAC;MAC7B,MAAMY,YAAY,GAAG,IAAId,YAAY,EAAE;MACvCc,YAAY,CAACC,GAAG,CACdZ,SAAS,CAACa,QAAQ,CACfC,QAAQ,EAAE,CAAC,EAAE;QAAEZ,IAAI;QAAEa,KAAK,EAAE,CAAC;QAAEd,UAAU;QAAEU,YAAY;QAAEZ;MAAG,CAAE,CAAC,CAAC;MACrE,OAAOY,YAAY;IACrB,CAAC,CAAC;;AAEN;AAGA,OAAM,SAAUG,QAAQA,CACIE,KAAsH;EAChJ,MAAM;IAAEd,IAAI;IAAEa,KAAK;IAAEd,UAAU;IAAEU,YAAY;IAAEZ;EAAG,CAAE,GAAGiB,KAAK;EAC5D,IAAI,CAACf,UAAU,CAACK,MAAM,EAAE;IACtB,IAAIS,KAAK,GAAGb,IAAI,CAACG,MAAM,EAAE;MACvB,MAAME,GAAG,GAAGL,IAAI,CAACa,KAAK,CAAC;MACvBd,UAAU,CAACQ,IAAI,CAAC,CAACF,GAAG,EAAER,GAAG,CAACQ,GAAG,CAAC,CAAC,CAAC;MAChCI,YAAY,CAACC,GAAG,CAAC,IAAI,CAACC,QAAQ,CAAC;QAAEX,IAAI;QAAEa,KAAK,EAAEA,KAAK,GAAG,CAAC;QAAEd,UAAU;QAAEU,YAAY;QAAEZ;MAAG,CAAE,CAAC,CAAC;KAC3F,MAAM;MACLE,UAAU,CAACS,QAAQ,EAAE;;;AAG3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}