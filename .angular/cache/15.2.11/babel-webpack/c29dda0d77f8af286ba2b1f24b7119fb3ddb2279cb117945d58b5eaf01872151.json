{"ast":null,"code":"import { Subject } from './Subject';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nexport class BehaviorSubject extends Subject {\n  constructor(_value) {\n    super();\n    this._value = _value;\n  }\n  get value() {\n    return this.getValue();\n  }\n  _subscribe(subscriber) {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !subscription.closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n  getValue() {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n  next(value) {\n    super.next(this._value = value);\n  }\n}","map":{"version":3,"names":["Subject","ObjectUnsubscribedError","BehaviorSubject","constructor","_value","value","getValue","_subscribe","subscriber","subscription","closed","next","hasError","thrownError"],"sources":["C:\\Thiru\\Angular\\RXJS_state_maintainance\\app\\node_modules\\rxjs\\src\\internal\\BehaviorSubject.ts"],"sourcesContent":["import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { SubscriptionLike } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<SubscriptionLike>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,WAAW;AAInC,SAASC,uBAAuB,QAAQ,gCAAgC;AAQxE,OAAM,MAAOC,eAAmB,SAAQF,OAAU;EAEhDG,YAAoBC,MAAS;IAC3B,KAAK,EAAE;IADW,KAAAA,MAAM,GAANA,MAAM;EAE1B;EAEA,IAAIC,KAAKA,CAAA;IACP,OAAO,IAAI,CAACC,QAAQ,EAAE;EACxB;EAGAC,UAAUA,CAACC,UAAyB;IAClC,MAAMC,YAAY,GAAG,KAAK,CAACF,UAAU,CAACC,UAAU,CAAC;IACjD,IAAIC,YAAY,IAAI,CAAoBA,YAAa,CAACC,MAAM,EAAE;MAC5DF,UAAU,CAACG,IAAI,CAAC,IAAI,CAACP,MAAM,CAAC;;IAE9B,OAAOK,YAAY;EACrB;EAEAH,QAAQA,CAAA;IACN,IAAI,IAAI,CAACM,QAAQ,EAAE;MACjB,MAAM,IAAI,CAACC,WAAW;KACvB,MAAM,IAAI,IAAI,CAACH,MAAM,EAAE;MACtB,MAAM,IAAIT,uBAAuB,EAAE;KACpC,MAAM;MACL,OAAO,IAAI,CAACG,MAAM;;EAEtB;EAEAO,IAAIA,CAACN,KAAQ;IACX,KAAK,CAACM,IAAI,CAAC,IAAI,CAACP,MAAM,GAAGC,KAAK,CAAC;EACjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}