{"ast":null,"code":"import { hostReportError } from './hostReportError';\nexport const subscribeToPromise = promise => subscriber => {\n  promise.then(value => {\n    if (!subscriber.closed) {\n      subscriber.next(value);\n      subscriber.complete();\n    }\n  }, err => subscriber.error(err)).then(null, hostReportError);\n  return subscriber;\n};","map":{"version":3,"names":["hostReportError","subscribeToPromise","promise","subscriber","then","value","closed","next","complete","err","error"],"sources":["C:\\Thiru\\Angular\\RXJS_state_maintainance\\app\\node_modules\\rxjs\\src\\internal\\util\\subscribeToPromise.ts"],"sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { hostReportError } from './hostReportError';\n\nexport const subscribeToPromise = <T>(promise: PromiseLike<T>) => (subscriber: Subscriber<T>) => {\n  promise.then(\n    (value) => {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    },\n    (err: any) => subscriber.error(err)\n  )\n  .then(null, hostReportError);\n  return subscriber;\n};\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,mBAAmB;AAEnD,OAAO,MAAMC,kBAAkB,GAAOC,OAAuB,IAAMC,UAAyB,IAAI;EAC9FD,OAAO,CAACE,IAAI,CACTC,KAAK,IAAI;IACR,IAAI,CAACF,UAAU,CAACG,MAAM,EAAE;MACtBH,UAAU,CAACI,IAAI,CAACF,KAAK,CAAC;MACtBF,UAAU,CAACK,QAAQ,EAAE;;EAEzB,CAAC,EACAC,GAAQ,IAAKN,UAAU,CAACO,KAAK,CAACD,GAAG,CAAC,CACpC,CACAL,IAAI,CAAC,IAAI,EAAEJ,eAAe,CAAC;EAC5B,OAAOG,UAAU;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}