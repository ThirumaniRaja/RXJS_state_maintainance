{"ast":null,"code":"import { AsyncAction } from './AsyncAction';\nexport class QueueAction extends AsyncAction {\n  constructor(scheduler, work) {\n    super(scheduler, work);\n    this.scheduler = scheduler;\n    this.work = work;\n  }\n  schedule(state, delay = 0) {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n  execute(state, delay) {\n    return delay > 0 || this.closed ? super.execute(state, delay) : this._execute(state, delay);\n  }\n  requestAsyncId(scheduler, id, delay = 0) {\n    if (delay !== null && delay > 0 || delay === null && this.delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    return scheduler.flush(this);\n  }\n}","map":{"version":3,"names":["AsyncAction","QueueAction","constructor","scheduler","work","schedule","state","delay","flush","execute","closed","_execute","requestAsyncId","id"],"sources":["C:\\Thiru\\Angular\\RXJS_state_maintainance\\app\\node_modules\\rxjs\\src\\internal\\scheduler\\QueueAction.ts"],"sourcesContent":["import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,eAAe;AAU3C,OAAM,MAAOC,WAAe,SAAQD,WAAc;EAEhDE,YAAsBC,SAAyB,EACzBC,IAAmD;IACvE,KAAK,CAACD,SAAS,EAAEC,IAAI,CAAC;IAFF,KAAAD,SAAS,GAATA,SAAS;IACT,KAAAC,IAAI,GAAJA,IAAI;EAE1B;EAEOC,QAAQA,CAACC,KAAS,EAAEC,KAAA,GAAgB,CAAC;IAC1C,IAAIA,KAAK,GAAG,CAAC,EAAE;MACb,OAAO,KAAK,CAACF,QAAQ,CAACC,KAAK,EAAEC,KAAK,CAAC;;IAErC,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACD,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACH,SAAS,CAACK,KAAK,CAAC,IAAI,CAAC;IAC1B,OAAO,IAAI;EACb;EAEOC,OAAOA,CAACH,KAAQ,EAAEC,KAAa;IACpC,OAAQA,KAAK,GAAG,CAAC,IAAI,IAAI,CAACG,MAAM,GAC9B,KAAK,CAACD,OAAO,CAACH,KAAK,EAAEC,KAAK,CAAC,GAC3B,IAAI,CAACI,QAAQ,CAACL,KAAK,EAAEC,KAAK,CAAC;EAC/B;EAEUK,cAAcA,CAACT,SAAyB,EAAEU,EAAQ,EAAEN,KAAA,GAAgB,CAAC;IAI7E,IAAKA,KAAK,KAAK,IAAI,IAAIA,KAAK,GAAG,CAAC,IAAMA,KAAK,KAAK,IAAI,IAAI,IAAI,CAACA,KAAK,GAAG,CAAE,EAAE;MACvE,OAAO,KAAK,CAACK,cAAc,CAACT,SAAS,EAAEU,EAAE,EAAEN,KAAK,CAAC;;IAGnD,OAAOJ,SAAS,CAACK,KAAK,CAAC,IAAI,CAAC;EAC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}