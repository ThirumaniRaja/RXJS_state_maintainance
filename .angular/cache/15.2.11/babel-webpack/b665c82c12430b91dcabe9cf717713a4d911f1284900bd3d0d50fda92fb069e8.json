{"ast":null,"code":"import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport let VirtualTimeScheduler = /*#__PURE__*/(() => {\n  class VirtualTimeScheduler extends AsyncScheduler {\n    constructor(SchedulerAction = VirtualAction, maxFrames = Number.POSITIVE_INFINITY) {\n      super(SchedulerAction, () => this.frame);\n      this.maxFrames = maxFrames;\n      this.frame = 0;\n      this.index = -1;\n    }\n    flush() {\n      const {\n        actions,\n        maxFrames\n      } = this;\n      let error, action;\n      while ((action = actions[0]) && action.delay <= maxFrames) {\n        actions.shift();\n        this.frame = action.delay;\n        if (error = action.execute(action.state, action.delay)) {\n          break;\n        }\n      }\n      if (error) {\n        while (action = actions.shift()) {\n          action.unsubscribe();\n        }\n        throw error;\n      }\n    }\n  }\n  VirtualTimeScheduler.frameTimeFactor = 10;\n  return VirtualTimeScheduler;\n})();\nexport class VirtualAction extends AsyncAction {\n  constructor(scheduler, work, index = scheduler.index += 1) {\n    super(scheduler, work);\n    this.scheduler = scheduler;\n    this.work = work;\n    this.index = index;\n    this.active = true;\n    this.index = scheduler.index = index;\n  }\n  schedule(state, delay = 0) {\n    if (!this.id) {\n      return super.schedule(state, delay);\n    }\n    this.active = false;\n    const action = new VirtualAction(this.scheduler, this.work);\n    this.add(action);\n    return action.schedule(state, delay);\n  }\n  requestAsyncId(scheduler, id, delay = 0) {\n    this.delay = scheduler.frame + delay;\n    const {\n      actions\n    } = scheduler;\n    actions.push(this);\n    actions.sort(VirtualAction.sortActions);\n    return true;\n  }\n  recycleAsyncId(scheduler, id, delay = 0) {\n    return undefined;\n  }\n  _execute(state, delay) {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n  static sortActions(a, b) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}","map":{"version":3,"names":["AsyncAction","AsyncScheduler","VirtualTimeScheduler","constructor","SchedulerAction","VirtualAction","maxFrames","Number","POSITIVE_INFINITY","frame","index","flush","actions","error","action","delay","shift","execute","state","unsubscribe","frameTimeFactor","scheduler","work","active","schedule","id","add","requestAsyncId","push","sort","sortActions","recycleAsyncId","undefined","_execute","a","b"],"sources":["C:\\Thiru\\Angular\\RXJS_state_maintainance\\app\\node_modules\\rxjs\\src\\internal\\scheduler\\VirtualTimeScheduler.ts"],"sourcesContent":["import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n\n  protected static frameTimeFactor: number = 10;\n\n  public frame: number = 0;\n  public index: number = -1;\n\n  constructor(SchedulerAction: typeof AsyncAction = VirtualAction as any,\n              public maxFrames: number = Number.POSITIVE_INFINITY) {\n    super(SchedulerAction, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n\n    const {actions, maxFrames} = this;\n    let error: any, action: AsyncAction<any>;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @nodoc\n */\nexport class VirtualAction<T> extends AsyncAction<T> {\n\n  protected active: boolean = true;\n\n  constructor(protected scheduler: VirtualTimeScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void,\n              protected index: number = scheduler.index += 1) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (!this.id) {\n      return super.schedule(state, delay);\n    }\n    this.active = false;\n    // If an action is rescheduled, we save allocations by mutating its state,\n    // pushing it to the end of the scheduler queue, and recycling the action.\n    // But since the VirtualTimeScheduler is used for testing, VirtualActions\n    // must be immutable so they can be inspected later.\n    const action = new VirtualAction(this.scheduler, this.work);\n    this.add(action);\n    return action.schedule(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    this.delay = scheduler.frame + delay;\n    const {actions} = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return true;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  public static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}