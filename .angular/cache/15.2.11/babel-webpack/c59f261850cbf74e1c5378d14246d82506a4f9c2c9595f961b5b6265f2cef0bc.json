{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let UrlService = /*#__PURE__*/(() => {\n  class UrlService {\n    constructor() {\n      this.previousUrl = new BehaviorSubject(null);\n      this.previousUrl$ = this.previousUrl.asObservable();\n    }\n    setPreviousUrl(previousUrl) {\n      this.previousUrl.next(previousUrl);\n    }\n    static {\n      this.ɵfac = function UrlService_Factory(t) {\n        return new (t || UrlService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: UrlService,\n        factory: UrlService.ɵfac\n      });\n    }\n  }\n  return UrlService;\n})();","map":{"version":3,"names":["BehaviorSubject","UrlService","constructor","previousUrl","previousUrl$","asObservable","setPreviousUrl","next","factory","ɵfac"],"sources":["C:\\Thiru\\Angular\\RXJS_state_maintainance\\app\\src\\app\\services\\url.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class UrlService {\n  private previousUrl: BehaviorSubject<string> = new BehaviorSubject<string>(null);\n  public previousUrl$: Observable<string> = this.previousUrl.asObservable();\n\n  constructor() { }\n\n  setPreviousUrl(previousUrl: string) {\n    this.previousUrl.next(previousUrl);\n  }\n\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;;AAGlD,WAAaC,UAAU;EAAjB,MAAOA,UAAU;IAIrBC,YAAA;MAHQ,KAAAC,WAAW,GAA4B,IAAIH,eAAe,CAAS,IAAI,CAAC;MACzE,KAAAI,YAAY,GAAuB,IAAI,CAACD,WAAW,CAACE,YAAY,EAAE;IAEzD;IAEhBC,cAAcA,CAACH,WAAmB;MAChC,IAAI,CAACA,WAAW,CAACI,IAAI,CAACJ,WAAW,CAAC;IACpC;;;yBARWF,UAAU;MAAA;IAAA;;;eAAVA,UAAU;QAAAO,OAAA,EAAVP,UAAU,CAAAQ;MAAA;IAAA;;SAAVR,UAAU;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}