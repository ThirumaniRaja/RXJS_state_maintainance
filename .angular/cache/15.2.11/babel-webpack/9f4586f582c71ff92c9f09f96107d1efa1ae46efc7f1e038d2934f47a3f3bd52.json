{"ast":null,"code":"import { observable as Symbol_observable } from '../symbol/observable';\nexport const subscribeToObservable = obj => subscriber => {\n  const obs = obj[Symbol_observable]();\n  if (typeof obs.subscribe !== 'function') {\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  } else {\n    return obs.subscribe(subscriber);\n  }\n};","map":{"version":3,"names":["observable","Symbol_observable","subscribeToObservable","obj","subscriber","obs","subscribe","TypeError"],"sources":["C:\\Thiru\\Angular\\RXJS_state_maintainance\\app\\node_modules\\rxjs\\src\\internal\\util\\subscribeToObservable.ts"],"sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * Subscribes to an object that implements Symbol.observable with the given\n * Subscriber.\n * @param obj An object that implements Symbol.observable\n */\nexport const subscribeToObservable = <T>(obj: any) => (subscriber: Subscriber<T>) => {\n  const obs = obj[Symbol_observable]();\n  if (typeof obs.subscribe !== 'function') {\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  } else {\n    return obs.subscribe(subscriber);\n  }\n};\n"],"mappings":"AACA,SAASA,UAAU,IAAIC,iBAAiB,QAAQ,sBAAsB;AAOtE,OAAO,MAAMC,qBAAqB,GAAOC,GAAQ,IAAMC,UAAyB,IAAI;EAClF,MAAMC,GAAG,GAAGF,GAAG,CAACF,iBAAiB,CAAC,EAAE;EACpC,IAAI,OAAOI,GAAG,CAACC,SAAS,KAAK,UAAU,EAAE;IAEvC,MAAM,IAAIC,SAAS,CAAC,gEAAgE,CAAC;GACtF,MAAM;IACL,OAAOF,GAAG,CAACC,SAAS,CAACF,UAAU,CAAC;;AAEpC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}