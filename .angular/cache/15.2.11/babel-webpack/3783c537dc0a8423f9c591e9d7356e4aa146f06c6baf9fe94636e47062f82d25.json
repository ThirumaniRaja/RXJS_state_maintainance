{"ast":null,"code":"const ObjectUnsubscribedErrorImpl = (() => {\n  function ObjectUnsubscribedErrorImpl() {\n    Error.call(this);\n    this.message = 'object unsubscribed';\n    this.name = 'ObjectUnsubscribedError';\n    return this;\n  }\n  ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\n  return ObjectUnsubscribedErrorImpl;\n})();\nexport const ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;","map":{"version":3,"names":["ObjectUnsubscribedErrorImpl","Error","call","message","name","prototype","Object","create","ObjectUnsubscribedError"],"sources":["C:\\Thiru\\Angular\\RXJS_state_maintainance\\app\\node_modules\\rxjs\\src\\internal\\util\\ObjectUnsubscribedError.ts"],"sourcesContent":["export interface ObjectUnsubscribedError extends Error {\n}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  new(): ObjectUnsubscribedError;\n}\n\nconst ObjectUnsubscribedErrorImpl = (() => {\n  function ObjectUnsubscribedErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'object unsubscribed';\n    this.name = 'ObjectUnsubscribedError';\n    return this;\n  }\n\n  ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ObjectUnsubscribedErrorImpl;\n})();\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = ObjectUnsubscribedErrorImpl as any;"],"mappings":"AAOA,MAAMA,2BAA2B,GAAG,CAAC,MAAK;EACxC,SAASA,2BAA2BA,CAAA;IAClCC,KAAK,CAACC,IAAI,CAAC,IAAI,CAAC;IAChB,IAAI,CAACC,OAAO,GAAG,qBAAqB;IACpC,IAAI,CAACC,IAAI,GAAG,yBAAyB;IACrC,OAAO,IAAI;EACb;EAEAJ,2BAA2B,CAACK,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACN,KAAK,CAACI,SAAS,CAAC;EAEtE,OAAOL,2BAA2B;AACpC,CAAC,EAAC,CAAE;AAWJ,OAAO,MAAMQ,uBAAuB,GAAgCR,2BAAkC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}