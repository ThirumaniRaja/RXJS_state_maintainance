{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nexport function toSubscriber(nextOrObserver, error, complete) {\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return nextOrObserver;\n    }\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n  return new Subscriber(nextOrObserver, error, complete);\n}","map":{"version":3,"names":["Subscriber","rxSubscriber","rxSubscriberSymbol","empty","emptyObserver","toSubscriber","nextOrObserver","error","complete"],"sources":["C:\\Thiru\\Angular\\RXJS_state_maintainance\\app\\node_modules\\rxjs\\src\\internal\\util\\toSubscriber.ts"],"sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,YAAY,IAAIC,kBAAkB,QAAQ,wBAAwB;AAC3E,SAASC,KAAK,IAAIC,aAAa,QAAQ,aAAa;AAGpD,OAAM,SAAUC,YAAYA,CAC1BC,cAA0D,EAC1DC,KAA4B,EAC5BC,QAAqB;EAErB,IAAIF,cAAc,EAAE;IAClB,IAAIA,cAAc,YAAYN,UAAU,EAAE;MACxC,OAAwBM,cAAe;;IAGzC,IAAIA,cAAc,CAACJ,kBAAkB,CAAC,EAAE;MACtC,OAAOI,cAAc,CAACJ,kBAAkB,CAAC,EAAE;;;EAI/C,IAAI,CAACI,cAAc,IAAI,CAACC,KAAK,IAAI,CAACC,QAAQ,EAAE;IAC1C,OAAO,IAAIR,UAAU,CAACI,aAAa,CAAC;;EAGtC,OAAO,IAAIJ,UAAU,CAACM,cAAc,EAAEC,KAAK,EAAEC,QAAQ,CAAC;AACxD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}