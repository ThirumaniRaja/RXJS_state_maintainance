{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nexport function skip(count) {\n  return source => source.lift(new SkipOperator(count));\n}\nclass SkipOperator {\n  constructor(total) {\n    this.total = total;\n  }\n  call(subscriber, source) {\n    return source.subscribe(new SkipSubscriber(subscriber, this.total));\n  }\n}\nclass SkipSubscriber extends Subscriber {\n  constructor(destination, total) {\n    super(destination);\n    this.total = total;\n    this.count = 0;\n  }\n  _next(x) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  }\n}","map":{"version":3,"names":["Subscriber","skip","count","source","lift","SkipOperator","constructor","total","call","subscriber","subscribe","SkipSubscriber","destination","_next","x","next"],"sources":["C:\\Thiru\\Angular\\RXJS_state_maintainance\\app\\node_modules\\rxjs\\src\\internal\\operators\\skip.ts"],"sourcesContent":["import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * ![](skip.png)\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipOperator(count));\n}\n\nclass SkipOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipSubscriber<T> extends Subscriber<T> {\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  }\n}\n"],"mappings":"AACA,SAASA,UAAU,QAAQ,eAAe;AAe1C,OAAM,SAAUC,IAAIA,CAAIC,KAAa;EACnC,OAAQC,MAAqB,IAAKA,MAAM,CAACC,IAAI,CAAC,IAAIC,YAAY,CAACH,KAAK,CAAC,CAAC;AACxE;AAEA,MAAMG,YAAY;EAChBC,YAAoBC,KAAa;IAAb,KAAAA,KAAK,GAALA,KAAK;EACzB;EAEAC,IAAIA,CAACC,UAAyB,EAAEN,MAAW;IACzC,OAAOA,MAAM,CAACO,SAAS,CAAC,IAAIC,cAAc,CAACF,UAAU,EAAE,IAAI,CAACF,KAAK,CAAC,CAAC;EACrE;;AAQF,MAAMI,cAAkB,SAAQX,UAAa;EAG3CM,YAAYM,WAA0B,EAAUL,KAAa;IAC3D,KAAK,CAACK,WAAW,CAAC;IAD4B,KAAAL,KAAK,GAALA,KAAK;IAFrD,KAAAL,KAAK,GAAW,CAAC;EAIjB;EAEUW,KAAKA,CAACC,CAAI;IAClB,IAAI,EAAE,IAAI,CAACZ,KAAK,GAAG,IAAI,CAACK,KAAK,EAAE;MAC7B,IAAI,CAACK,WAAW,CAACG,IAAI,CAACD,CAAC,CAAC;;EAE5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}