{"ast":null,"code":"import { AsyncAction } from './AsyncAction';\nexport class AnimationFrameAction extends AsyncAction {\n  constructor(scheduler, work) {\n    super(scheduler, work);\n    this.scheduler = scheduler;\n    this.work = work;\n  }\n  requestAsyncId(scheduler, id, delay = 0) {\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    scheduler.actions.push(this);\n    return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(() => scheduler.flush(null)));\n  }\n  recycleAsyncId(scheduler, id, delay = 0) {\n    if (delay !== null && delay > 0 || delay === null && this.delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    if (scheduler.actions.length === 0) {\n      cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    return undefined;\n  }\n}","map":{"version":3,"names":["AsyncAction","AnimationFrameAction","constructor","scheduler","work","requestAsyncId","id","delay","actions","push","scheduled","requestAnimationFrame","flush","recycleAsyncId","length","cancelAnimationFrame","undefined"],"sources":["C:\\Thiru\\Angular\\RXJS_state_maintainance\\app\\node_modules\\rxjs\\src\\internal\\scheduler\\AnimationFrameAction.ts"],"sourcesContent":["import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AnimationFrameScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(\n      () => scheduler.flush(null)));\n  }\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested animation frame and\n    // set the scheduled flag to undefined so the next AnimationFrameAction will\n    // request its own.\n    if (scheduler.actions.length === 0) {\n      cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,eAAe;AAS3C,OAAM,MAAOC,oBAAwB,SAAQD,WAAc;EAEzDE,YAAsBC,SAAkC,EAClCC,IAAmD;IACvE,KAAK,CAACD,SAAS,EAAEC,IAAI,CAAC;IAFF,KAAAD,SAAS,GAATA,SAAS;IACT,KAAAC,IAAI,GAAJA,IAAI;EAE1B;EAEUC,cAAcA,CAACF,SAAkC,EAAEG,EAAQ,EAAEC,KAAA,GAAgB,CAAC;IAEtF,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,GAAG,CAAC,EAAE;MAC/B,OAAO,KAAK,CAACF,cAAc,CAACF,SAAS,EAAEG,EAAE,EAAEC,KAAK,CAAC;;IAGnDJ,SAAS,CAACK,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC;IAI5B,OAAON,SAAS,CAACO,SAAS,KAAKP,SAAS,CAACO,SAAS,GAAGC,qBAAqB,CACxE,MAAMR,SAAS,CAACS,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;EACjC;EACUC,cAAcA,CAACV,SAAkC,EAAEG,EAAQ,EAAEC,KAAA,GAAgB,CAAC;IAItF,IAAKA,KAAK,KAAK,IAAI,IAAIA,KAAK,GAAG,CAAC,IAAMA,KAAK,KAAK,IAAI,IAAI,IAAI,CAACA,KAAK,GAAG,CAAE,EAAE;MACvE,OAAO,KAAK,CAACM,cAAc,CAACV,SAAS,EAAEG,EAAE,EAAEC,KAAK,CAAC;;IAKnD,IAAIJ,SAAS,CAACK,OAAO,CAACM,MAAM,KAAK,CAAC,EAAE;MAClCC,oBAAoB,CAACT,EAAE,CAAC;MACxBH,SAAS,CAACO,SAAS,GAAGM,SAAS;;IAGjC,OAAOA,SAAS;EAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}