{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nexport function defaultIfEmpty(defaultValue = null) {\n  return source => source.lift(new DefaultIfEmptyOperator(defaultValue));\n}\nclass DefaultIfEmptyOperator {\n  constructor(defaultValue) {\n    this.defaultValue = defaultValue;\n  }\n  call(subscriber, source) {\n    return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n  }\n}\nclass DefaultIfEmptySubscriber extends Subscriber {\n  constructor(destination, defaultValue) {\n    super(destination);\n    this.defaultValue = defaultValue;\n    this.isEmpty = true;\n  }\n  _next(value) {\n    this.isEmpty = false;\n    this.destination.next(value);\n  }\n  _complete() {\n    if (this.isEmpty) {\n      this.destination.next(this.defaultValue);\n    }\n    this.destination.complete();\n  }\n}","map":{"version":3,"names":["Subscriber","defaultIfEmpty","defaultValue","source","lift","DefaultIfEmptyOperator","constructor","call","subscriber","subscribe","DefaultIfEmptySubscriber","destination","isEmpty","_next","value","next","_complete","complete"],"sources":["C:\\Thiru\\Angular\\RXJS_state_maintainance\\app\\node_modules\\rxjs\\src\\internal\\operators\\defaultIfEmpty.ts"],"sourcesContent":["import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function defaultIfEmpty<T>(defaultValue?: T): MonoTypeOperatorFunction<T>;\nexport function defaultIfEmpty<T, R>(defaultValue?: R): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * ![](defaultIfEmpty.png)\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * ## Example\n * If no clicks happen in 5 seconds, then emit \"no clicks\"\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { defaultIfEmpty, takeUntil } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksBeforeFive = clicks.pipe(takeUntil(interval(5000)));\n * const result = clicksBeforeFive.pipe(defaultIfEmpty('no clicks'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R = null): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new DefaultIfEmptyOperator(defaultValue)) as Observable<T | R>;\n}\n\nclass DefaultIfEmptyOperator<T, R> implements Operator<T, T | R> {\n\n  constructor(private defaultValue: R) {\n  }\n\n  call(subscriber: Subscriber<T | R>, source: any): any {\n    return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DefaultIfEmptySubscriber<T, R> extends Subscriber<T> {\n  private isEmpty: boolean = true;\n\n  constructor(destination: Subscriber<T | R>, private defaultValue: R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.isEmpty = false;\n    this.destination.next(value);\n  }\n\n  protected _complete(): void {\n    if (this.isEmpty) {\n      this.destination.next(this.defaultValue);\n    }\n    this.destination.complete();\n  }\n}\n"],"mappings":"AAEA,SAASA,UAAU,QAAQ,eAAe;AA4C1C,OAAM,SAAUC,cAAcA,CAAOC,YAAA,GAAkB,IAAI;EACzD,OAAQC,MAAqB,IAAKA,MAAM,CAACC,IAAI,CAAC,IAAIC,sBAAsB,CAACH,YAAY,CAAC,CAAsB;AAC9G;AAEA,MAAMG,sBAAsB;EAE1BC,YAAoBJ,YAAe;IAAf,KAAAA,YAAY,GAAZA,YAAY;EAChC;EAEAK,IAAIA,CAACC,UAA6B,EAAEL,MAAW;IAC7C,OAAOA,MAAM,CAACM,SAAS,CAAC,IAAIC,wBAAwB,CAACF,UAAU,EAAE,IAAI,CAACN,YAAY,CAAC,CAAC;EACtF;;AAQF,MAAMQ,wBAA+B,SAAQV,UAAa;EAGxDM,YAAYK,WAA8B,EAAUT,YAAe;IACjE,KAAK,CAACS,WAAW,CAAC;IADgC,KAAAT,YAAY,GAAZA,YAAY;IAFxD,KAAAU,OAAO,GAAY,IAAI;EAI/B;EAEUC,KAAKA,CAACC,KAAQ;IACtB,IAAI,CAACF,OAAO,GAAG,KAAK;IACpB,IAAI,CAACD,WAAW,CAACI,IAAI,CAACD,KAAK,CAAC;EAC9B;EAEUE,SAASA,CAAA;IACjB,IAAI,IAAI,CAACJ,OAAO,EAAE;MAChB,IAAI,CAACD,WAAW,CAACI,IAAI,CAAC,IAAI,CAACb,YAAY,CAAC;;IAE1C,IAAI,CAACS,WAAW,CAACM,QAAQ,EAAE;EAC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}