{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nexport function isEmpty() {\n  return source => source.lift(new IsEmptyOperator());\n}\nclass IsEmptyOperator {\n  call(observer, source) {\n    return source.subscribe(new IsEmptySubscriber(observer));\n  }\n}\nclass IsEmptySubscriber extends Subscriber {\n  constructor(destination) {\n    super(destination);\n  }\n  notifyComplete(isEmpty) {\n    const destination = this.destination;\n    destination.next(isEmpty);\n    destination.complete();\n  }\n  _next(value) {\n    this.notifyComplete(false);\n  }\n  _complete() {\n    this.notifyComplete(true);\n  }\n}","map":{"version":3,"names":["Subscriber","isEmpty","source","lift","IsEmptyOperator","call","observer","subscribe","IsEmptySubscriber","constructor","destination","notifyComplete","next","complete","_next","value","_complete"],"sources":["C:\\Thiru\\Angular\\RXJS_state_maintainance\\app\\node_modules\\rxjs\\src\\internal\\operators\\isEmpty.ts"],"sourcesContent":["import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Emits false if the input observable emits any values, or emits true if the\n * input observable completes without emitting any values.\n *\n * <span class=\"informal\">Tells whether any values are emitted by an observable</span>\n *\n * ![](isEmpty.png)\n *\n * `isEmpty` transforms an Observable that emits values into an Observable that\n * emits a single boolean value representing whether or not any values were\n * emitted by the source Observable. As soon as the source Observable emits a\n * value, `isEmpty` will emit a `false` and complete.  If the source Observable\n * completes having not emitted anything, `isEmpty` will emit a `true` and\n * complete.\n *\n * A similar effect could be achieved with {@link count}, but `isEmpty` can emit\n * a `false` value sooner.\n *\n * ## Examples\n *\n * Emit `false` for a non-empty Observable\n * ```javascript\n * import { Subject } from 'rxjs';\n * import { isEmpty } from 'rxjs/operators';\n *\n * const source = new Subject<string>();\n * const result = source.pipe(isEmpty());\n * source.subscribe(x => console.log(x));\n * result.subscribe(x => console.log(x));\n * source.next('a');\n * source.next('b');\n * source.next('c');\n * source.complete();\n *\n * // Results in:\n * // a\n * // false\n * // b\n * // c\n * ```\n *\n * Emit `true` for an empty Observable\n * ```javascript\n * import { EMPTY } from 'rxjs';\n * import { isEmpty } from 'rxjs/operators';\n *\n * const result = EMPTY.pipe(isEmpty());\n * result.subscribe(x => console.log(x));\n * // Results in:\n * // true\n * ```\n *\n * @see {@link count}\n * @see {@link EMPTY}\n *\n * @return {OperatorFunction<T, boolean>} An Observable of a boolean value indicating whether observable was empty or not\n * @method isEmpty\n * @owner Observable\n */\n\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new IsEmptyOperator());\n}\n\nclass IsEmptyOperator implements Operator<any, boolean> {\n  call (observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new IsEmptySubscriber(observer));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IsEmptySubscriber extends Subscriber<any> {\n  constructor(destination: Subscriber<boolean>) {\n    super(destination);\n  }\n\n  private notifyComplete(isEmpty: boolean): void {\n    const destination = this.destination;\n\n    destination.next(isEmpty);\n    destination.complete();\n  }\n\n  protected _next(value: boolean) {\n    this.notifyComplete(false);\n  }\n\n  protected _complete() {\n    this.notifyComplete(true);\n  }\n}\n"],"mappings":"AACA,SAASA,UAAU,QAAQ,eAAe;AAgE1C,OAAM,SAAUC,OAAOA,CAAA;EACrB,OAAQC,MAAqB,IAAKA,MAAM,CAACC,IAAI,CAAC,IAAIC,eAAe,EAAE,CAAC;AACtE;AAEA,MAAMA,eAAe;EACnBC,IAAIA,CAAEC,QAA6B,EAAEJ,MAAW;IAC9C,OAAOA,MAAM,CAACK,SAAS,CAAC,IAAIC,iBAAiB,CAACF,QAAQ,CAAC,CAAC;EAC1D;;AAQF,MAAME,iBAAkB,SAAQR,UAAe;EAC7CS,YAAYC,WAAgC;IAC1C,KAAK,CAACA,WAAW,CAAC;EACpB;EAEQC,cAAcA,CAACV,OAAgB;IACrC,MAAMS,WAAW,GAAG,IAAI,CAACA,WAAW;IAEpCA,WAAW,CAACE,IAAI,CAACX,OAAO,CAAC;IACzBS,WAAW,CAACG,QAAQ,EAAE;EACxB;EAEUC,KAAKA,CAACC,KAAc;IAC5B,IAAI,CAACJ,cAAc,CAAC,KAAK,CAAC;EAC5B;EAEUK,SAASA,CAAA;IACjB,IAAI,CAACL,cAAc,CAAC,IAAI,CAAC;EAC3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}