{"ast":null,"code":"import { isArray } from './isArray';\nexport function isNumeric(val) {\n  return !isArray(val) && val - parseFloat(val) + 1 >= 0;\n}","map":{"version":3,"names":["isArray","isNumeric","val","parseFloat"],"sources":["C:\\Thiru\\Angular\\RXJS_state_maintainance\\app\\node_modules\\rxjs\\src\\internal\\util\\isNumeric.ts"],"sourcesContent":["import { isArray } from './isArray';\n\nexport function isNumeric(val: any): val is number | string {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,WAAW;AAEnC,OAAM,SAAUC,SAASA,CAACC,GAAQ;EAKhC,OAAO,CAACF,OAAO,CAACE,GAAG,CAAC,IAAKA,GAAG,GAAGC,UAAU,CAACD,GAAG,CAAC,GAAG,CAAC,IAAK,CAAC;AAC1D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}