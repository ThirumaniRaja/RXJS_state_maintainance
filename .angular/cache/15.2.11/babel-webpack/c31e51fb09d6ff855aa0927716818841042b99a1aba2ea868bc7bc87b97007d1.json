{"ast":null,"code":"import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n  constructor(SchedulerAction, now = Scheduler.now) {\n    super(SchedulerAction, () => {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    });\n    this.actions = [];\n    this.active = false;\n    this.scheduled = undefined;\n  }\n  schedule(work, delay = 0, state) {\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return super.schedule(work, delay, state);\n    }\n  }\n  flush(action) {\n    const {\n      actions\n    } = this;\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n    let error;\n    this.active = true;\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift());\n    this.active = false;\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}","map":{"version":3,"names":["Scheduler","AsyncScheduler","constructor","SchedulerAction","now","delegate","actions","active","scheduled","undefined","schedule","work","delay","state","flush","action","push","error","execute","shift","unsubscribe"],"sources":["C:\\Thiru\\Angular\\RXJS_state_maintainance\\app\\node_modules\\rxjs\\src\\internal\\scheduler\\AsyncScheduler.ts"],"sourcesContent":["import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport class AsyncScheduler extends Scheduler {\n  public static delegate?: Scheduler;\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @deprecated internal use only\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @deprecated internal use only\n   */\n  public scheduled: any = undefined;\n\n  constructor(SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    super(SchedulerAction, () => {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    });\n  }\n\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return super.schedule(work, delay, state);\n    }\n  }\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,cAAc;AAMxC,OAAM,MAAOC,cAAe,SAAQD,SAAS;EAmB3CE,YAAYC,eAA8B,EAC9BC,GAAA,GAAoBJ,SAAS,CAACI,GAAG;IAC3C,KAAK,CAACD,eAAe,EAAE,MAAK;MAC1B,IAAIF,cAAc,CAACI,QAAQ,IAAIJ,cAAc,CAACI,QAAQ,KAAK,IAAI,EAAE;QAC/D,OAAOJ,cAAc,CAACI,QAAQ,CAACD,GAAG,EAAE;OACrC,MAAM;QACL,OAAOA,GAAG,EAAE;;IAEhB,CAAC,CAAC;IAzBG,KAAAE,OAAO,GAA4B,EAAE;IAOrC,KAAAC,MAAM,GAAY,KAAK;IAQvB,KAAAC,SAAS,GAAQC,SAAS;EAWjC;EAEOC,QAAQA,CAAIC,IAAmD,EAAEC,KAAA,GAAgB,CAAC,EAAEC,KAAS;IAClG,IAAIZ,cAAc,CAACI,QAAQ,IAAIJ,cAAc,CAACI,QAAQ,KAAK,IAAI,EAAE;MAC/D,OAAOJ,cAAc,CAACI,QAAQ,CAACK,QAAQ,CAACC,IAAI,EAAEC,KAAK,EAAEC,KAAK,CAAC;KAC5D,MAAM;MACL,OAAO,KAAK,CAACH,QAAQ,CAACC,IAAI,EAAEC,KAAK,EAAEC,KAAK,CAAC;;EAE7C;EAEOC,KAAKA,CAACC,MAAwB;IAEnC,MAAM;MAACT;IAAO,CAAC,GAAG,IAAI;IAEtB,IAAI,IAAI,CAACC,MAAM,EAAE;MACfD,OAAO,CAACU,IAAI,CAACD,MAAM,CAAC;MACpB;;IAGF,IAAIE,KAAU;IACd,IAAI,CAACV,MAAM,GAAG,IAAI;IAElB,GAAG;MACD,IAAIU,KAAK,GAAGF,MAAM,CAACG,OAAO,CAACH,MAAM,CAACF,KAAK,EAAEE,MAAM,CAACH,KAAK,CAAC,EAAE;QACtD;;KAEH,QAAQG,MAAM,GAAGT,OAAO,CAACa,KAAK,EAAE;IAEjC,IAAI,CAACZ,MAAM,GAAG,KAAK;IAEnB,IAAIU,KAAK,EAAE;MACT,OAAOF,MAAM,GAAGT,OAAO,CAACa,KAAK,EAAE,EAAE;QAC/BJ,MAAM,CAACK,WAAW,EAAE;;MAEtB,MAAMH,KAAK;;EAEf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}